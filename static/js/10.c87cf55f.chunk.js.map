{"version":3,"file":"static/js/10.c87cf55f.chunk.js","mappings":"qQAEaA,EAAcC,EAAAA,GAAAA,GAAH,gDAIXC,EAASD,EAAAA,GAAAA,EAAH,oI,SCHNE,EAAc,SAAC,GACxB,OADwC,EAAdC,QACXC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACf,UAACR,EAAD,YACI,UAACE,EAAD,sBAAiBI,MACjB,uBAAIE,MAFUD,EADH,GAMtB,ECRYE,EAAaR,EAAAA,GAAAA,GAAH,kEAKVS,EAAUT,EAAAA,GAAAA,EAAH,4C,kBC0CpB,EAxCgB,WACZ,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAEMC,GAAUC,EAAAA,EAAAA,MAmBhB,OAjBAC,EAAAA,EAAAA,YAAU,WACNH,GAAW,GAEX,IAAMI,EAAU,mCAAG,8GAEeC,EAAAA,EAAAA,IAAaJ,GAF5B,OAELK,EAFK,OAIXV,EAAWU,EAAYC,KAAKC,SAJjB,gDAMXV,EAAS,KAAMW,SANJ,yBAQXT,GAAW,GARA,4EAAH,qDAWhBI,GACH,GAAE,CAACH,KAGA,gCACK,IACAJ,IAAS,uBAAIA,IACbE,IAAW,SAACW,EAAA,EAAD,IACQ,IAAnBtB,EAAQuB,QACL,SAAClB,EAAD,WACI,SAACN,EAAD,CAAaC,QAASA,OAG1B,SAACM,EAAD,wDAIf,C,uNC7CKkB,EAAO,mCACPC,EAAQ,gCACDC,EAAS,kCAETC,EAAa,mCAAG,8FACZC,EAAAA,EAAAA,IAAA,UACNH,EADM,oCAC8BD,IAFlB,mFAAH,qDAMTK,EAAgB,mCAAG,WAAMC,GAAN,iFACfF,EAAAA,EAAAA,IAAA,UACNH,EADM,iBACWK,EADX,oBAC+BN,EAD/B,oBADe,mFAAH,sDAKhBO,EAAgB,mCAAG,WAAMC,GAAN,iFACfJ,EAAAA,EAAAA,IAAA,UACNH,EADM,gCAC0BD,EAD1B,4DACqFQ,IAFtE,mFAAH,sDAKhBC,EAAS,mCAAG,WAAMH,GAAN,iFACRF,EAAAA,EAAAA,IAAA,UACNH,EADM,iBACWK,EADX,4BACuCN,EADvC,oBADQ,mFAAH,sDAKTP,EAAY,mCAAG,WAAMa,GAAN,iFACXF,EAAAA,EAAAA,IAAA,UACNH,EADM,iBACWK,EADX,2BACsCN,EADtC,oBADW,mFAAH,qD","sources":["components/ReviewsList/ReviewsListStyled.js","components/ReviewsList/ReviewsList.jsx","Pages/Reviews/ReviewsStyled.js","Pages/Reviews/Reviews.jsx","components/FetchData.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Author = styled.p`\n  font-size: 20px;\n  font-weight: 800;\n  margin-bottom: 10px;\n  color: #483d8b;\n  margin-bottom: 15px;\n`;","import PropTypes from 'prop-types';\nimport { ReviewsItem, Author } from './ReviewsListStyled';\n\nexport const ReviewsList = ({ reviews }) => {\n    return reviews.map(({ author, id, content }) => (\n        <ReviewsItem key={id}>\n            <Author>Author: {author}</Author>\n            <p>{content}</p>\n        </ReviewsItem>\n    ));\n};\n\nReviewsList.propTypes = {\n    reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n            author: PropTypes.string,\n            id: PropTypes.string,\n            content: PropTypes.string,\n        })\n    ).isRequired\n};","import styled from \"styled-components\";\n\nexport const ListStyled = styled.ul`\n  font-size: 20px;\n  padding-top: 15px;\n`;\n\nexport const Message = styled.p`\n  font-size: 25px;\n`;\n","import { Spinner } from \"components/Spinner\";\nimport { FetchReviews } from \"components/FetchData\";\nimport { ReviewsList } from \"components/ReviewsList/ReviewsList\";\n\nimport { ListStyled, Message } from \"./ReviewsStyled\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const movieId = useParams();\n\n    useEffect(() => {\n        setLoading(true);\n\n        const getReviews = async () => {\n            try {\n                const reviewsData = await FetchReviews(movieId);\n\n                setReviews(reviewsData.data.results);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n        getReviews();\n    }, [movieId]);\n    \n    return (\n        <>\n            {' '}\n            {error && <p>{error}</p>}\n            {loading && <Spinner />}\n            {reviews.length !== 0 ? (\n                <ListStyled>\n                    <ReviewsList reviews={reviews} />\n                </ListStyled>\n            ) : (\n                <Message>We don't find any review for this movie</Message>\n            )}\n        </>\n    );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = `4ae6168b46e9ef37c5631010b26d05b2`;\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nexport const IMAGE_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport const FetchTrending = async () => {\n    return await axios.get(\n        `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n    );\n};\n\n    export const FetchSingleMovie = async movie_id => {\n        return await axios.get(\n            `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n        );\n    };\n    export const FetchSearchMovie = async search => {\n        return await axios.get(\n            `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${search}`\n        );\n    };\n    export const FetchCast = async movie_id => {\n        return await axios.get(\n            `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n        );\n    };\n    export const FetchReviews = async movie_id => {\n        return await axios.get(\n            `${BASE_URL}movie/${movie_id}reviews?api_key=${API_KEY}&language=en-US`\n        );\n    };\n"],"names":["ReviewsItem","styled","Author","ReviewsList","reviews","map","author","id","content","ListStyled","Message","useState","setReviews","error","setError","loading","setLoading","movieId","useParams","useEffect","getReviews","FetchReviews","reviewsData","data","results","message","Spinner","length","API_KEY","BASE_URL","IMAGE_URL","FetchTrending","axios","FetchSingleMovie","movie_id","FetchSearchMovie","search","FetchCast"],"sourceRoot":""}