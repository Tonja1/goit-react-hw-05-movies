{"version":3,"file":"static/js/7.f8b808b1.chunk.js","mappings":"kRAEaA,EAAcC,EAAAA,GAAAA,MAAH,yMAWXC,EAAYD,EAAAA,GAAAA,OAAH,sR,SCTTE,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAYA,OACI,kBAAMH,SAPW,SAAAI,GACjBA,EAAEC,iBACFL,EAAS,CAAEE,OAAAA,IACXC,EAAU,GACb,EAGG,WACI,SAACP,EAAD,CACIU,MAAOJ,EACPK,SAdU,SAAAH,GAClBD,EAAUC,EAAEI,OAAOF,MACtB,EAaWG,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,KAAK,YAET,SAACf,EAAD,sBAGX,E,SC7BYgB,EAAkBjB,EAAAA,GAAAA,IAAH,gDC+C5B,EAvCqB,WACnB,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOc,EAAP,KAAoBC,EAApB,KACA,GAA0Bf,EAAAA,EAAAA,UAAS,IAAnC,eAAOgB,EAAP,KAAcC,EAAd,KACA,GAA8BjB,EAAAA,EAAAA,WAAS,GAAvC,eAAOkB,EAAP,KAAgBC,EAAhB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMrB,EAASoB,EAAaE,IAAI,UAuBhC,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKvB,EAAL,CACAkB,GAAW,GACX,IAAMM,EAAe,mCAAG,8GAEaC,EAAAA,EAAAA,IAAiBzB,GAF9B,OAEd0B,EAFc,OAGpBZ,EAAeY,EAAmBC,KAAKC,SAHnB,gDAKpBZ,EAAS,KAAMa,SALK,yBAOpBX,GAAW,GAPS,4EAAH,qDAUrBM,GAZmB,CAapB,GAAE,CAACxB,KAGF,UAACY,EAAD,YACE,SAACf,EAAD,CAAYC,SAvBC,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAClBqB,EAAgB,CAAErB,OAAAA,IAClBc,EAAe,GAChB,IAqBIG,IAAW,SAACa,EAAA,EAAD,IACXf,IAAS,uBAAIA,KACd,wBAAKF,EAAYkB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYC,OAAQpB,QAGxD,C,uNC7CKqB,EAAO,mCACPC,EAAQ,gCACDC,EAAS,kCAETC,EAAa,mCAAG,8FACZC,EAAAA,EAAAA,IAAA,UACNH,EADM,oCAC8BD,IAFlB,mFAAH,qDAMTK,EAAgB,mCAAG,WAAMC,GAAN,iFACfF,EAAAA,EAAAA,IAAA,UACNH,EADM,iBACWK,EADX,oBAC+BN,EAD/B,oBADe,mFAAH,sDAKhBT,EAAgB,mCAAG,WAAMzB,GAAN,iFACfsC,EAAAA,EAAAA,IAAA,UACNH,EADM,gCAC0BD,EAD1B,4DACqFlC,IAFtE,mFAAH,sDAKhByC,EAAS,mCAAG,WAAMD,GAAN,iFACRF,EAAAA,EAAAA,IAAA,UACNH,EADM,iBACWK,EADX,4BACuCN,EADvC,oBADQ,mFAAH,sDAKTQ,EAAY,mCAAG,WAAMF,GAAN,iFACXF,EAAAA,EAAAA,IAAA,UACNH,EADM,iBACWK,EADX,2BACsCN,EADtC,oBADW,mFAAH,qD,sFCzBhBS,E,OAAOhD,GAAAA,GAAH,2G,SCEJqC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBW,GAAWC,EAAAA,EAAAA,MAEjB,OAAOZ,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOrC,EAAd,EAAcA,KAAd,OACd,SAACgC,EAAD,WACI,SAAC,KAAD,CAAMM,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaJ,GAAhD,SACKC,GAASrC,KAFPoC,EADG,GAOrB,C","sources":["components/SearchForm/SearchFormStyled.js","components/SearchForm/SearchForm.jsx","Pages/Movies/MoviesStyled.js","Pages/Movies/Movies.jsx","components/FetchData.jsx","components/MoviesList/MoviesListStyled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const InputStyled = styled.input`\n  height: 33px;\n  width: 250px;\n  margin-right: 10px;\n  font-size: 20px;\n  border: solid 1px #483d8b;\n  border-radius: 6px;\n  padding-left: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const SearchBtn = styled.button`\n  font-size: 20px;\n  font-weight: 600;\n  padding: 3.5px 10px;\n  color: #483d8b;\n  background-color: lightgray;\n  border: solid 1px #483d8b;\n  border-radius: 6px;\n  &:hover,\n  &:focus {\n    background-color: #483d8b;\n    color: lightgray;\n  }\n`;","import PropTypes from 'prop-types';\nimport { InputStyled, SearchBtn } from './SearchFormStyled';\nimport { useState } from 'react';\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [search, setSearch] = useState(\"\");\n\n    const onInputChange = e => {\n        setSearch(e.target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({ search });\n        setSearch('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <InputStyled\n                value={search}\n                onChange={onInputChange}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movie\"\n                name=\"search\"\n            />\n            <SearchBtn>Searc</SearchBtn>\n        </form>\n    );\n};\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","import styled from \"styled-components\";\n\nexport const MoviesContainer = styled.div`\n  padding: 40px 120px;\n`;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Spinner } from '../../components/Spinner';\n\nimport { FetchSearchMovie } from '../../components/FetchData';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nimport { MoviesContainer } from '../Movies/MoviesStyled';\n\nconst SearchMovies = () => {\n  const [moviesItems, setMoviesItems] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  const onSubmit = ({ search }) => {\n    setSearchParams({ search });\n    setMoviesItems([]);\n  };\n\n  useEffect(() => {\n    if (!search) return;\n    setLoading(true);\n    const getSearchMovies = async () => {\n      try {\n        const searchMoviesResult = await FetchSearchMovie(search);\n        setMoviesItems(searchMoviesResult.data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getSearchMovies();\n  }, [search]);\n\n  return (\n    <MoviesContainer>\n      <SearchForm onSubmit={onSubmit} />\n      {loading && <Spinner />}\n      {error && <p>{error}</p>}\n      <ul>{moviesItems.length > 0 && <MoviesList movies={moviesItems} />}</ul>\n    </MoviesContainer>\n  );\n};\n\nexport default SearchMovies;","import axios from \"axios\";\n\nconst API_KEY = `4ae6168b46e9ef37c5631010b26d05b2`;\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nexport const IMAGE_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport const FetchTrending = async () => {\n    return await axios.get(\n        `${BASE_URL}tranding/all/day?api_key=${API_KEY}`\n    );\n};\n\n    export const FetchSingleMovie = async movie_id => {\n        return await axios.get(\n            `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n        );\n    };\n    export const FetchSearchMovie = async search => {\n        return await axios.get(\n            `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${search}`\n        );\n    };\n    export const FetchCast = async movie_id => {\n        return await axios.get(\n            `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n        );\n    };\n    export const FetchReviews = async movie_id => {\n        return await axios.get(\n            `${BASE_URL}movie/${movie_id}reviews?api_key=${API_KEY}&language=en-US`\n        );\n    };\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n  font-size: 20px;\n  font-weight: 400;\n  color: #212121;\n  margin-bottom: 7px;\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Item } from \"./MoviesListStyled\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n\n    return movies.map(({ id, title, name }) => (\n        <Item key={id}>\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n                {title || name}\n            </Link>\n        </Item>\n    ));\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            name: PropTypes.string,\n        })\n    ).isRequired,\n};"],"names":["InputStyled","styled","SearchBtn","SearchForm","onSubmit","useState","search","setSearch","e","preventDefault","value","onChange","target","type","autoComplete","autoFocus","placeholder","name","MoviesContainer","moviesItems","setMoviesItems","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovies","FetchSearchMovie","searchMoviesResult","data","results","message","Spinner","length","MoviesList","movies","API_KEY","BASE_URL","IMAGE_URL","FetchTrending","axios","FetchSingleMovie","movie_id","FetchCast","FetchReviews","Item","location","useLocation","map","id","title","state","from","to"],"sourceRoot":""}